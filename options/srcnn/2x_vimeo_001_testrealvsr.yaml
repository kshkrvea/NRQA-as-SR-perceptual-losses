
task: 001_train_srcnn_vimeo
model: srcnn
gpu_ids: [3]
dist: false
find_unused_parameters: false
use_static_graph: true
weights_scale: 2
scale: 2
n_channels: 3

path: 
    root: experiments/srcnn
    pretrained_netG: ""

datasets: 
  train: 
    name: vimeo
    dataroot_gt: ../datasets/vimeo/vimeo90k_train_GT.lmdb
    dataroot_lq: ../datasets/vimeo/vimeo90k_train_LR7frames.lmdb
    meta_info_file: ../datasets/vimeo/meta_info_Vimeo90K_train_GT.txt
    io_backend: 
      type: lmdb
    num_frame: 7
    gt_size: 128
    interval_list: [1]
    random_reverse: true
    use_hflip: true
    use_rot: true
    pad_sequence: false
    scale: 2
    dataloader_shuffle: true
    dataloader_num_workers: 12
    dataloader_batch_size: 16
  
  test: 
    name: realvsr
    dataroot_gt: ../datasets/testset/GT.lmdb
    dataroot_lq: ../datasets/testset/LQ.lmdb
    cache_data: true
    io_backend: 
      type: lmdb
    num_frame: 7
    gt_size: 128
    interval_list: [1]
    random_reverse: true
    use_hflip: true
    use_rot: true
    pad_sequence: false
    scale: 2
    dataloader_shuffle: false
    dataloader_num_workers: 12
        

netG: 
  net_type: srcnn
  arguments:
    upscale: 2
    num_channels: 3
  init_type: default
  unfreeze_blocks: 0


train: 
  G_lossfn_types: [charbonnier]
  G_lossfn_weights: [1]
  G_charbonnier_eps: 1e-9

  E_decay: 0 # Exponential Moving Average for netG: set 0 to disable; default setting 0.999

  G_optimizer_type: adam        # fixed, adam is enough
  G_optimizer_lr: 4e-4            # learning rate
  G_optimizer_betas: [0.9,0.99]
  G_optimizer_wd: 0               # weight decay, default 0
  G_optimizer_clipgrad: null      # unused
  G_optimizer_reuse: true         #

  fix_iter: 10000
  fix_lr_mul: 0.125
  fix_keys: ["spynet", "deform"]

  total_iter: 10000
  G_scheduler_type: CosineAnnealingWarmRestarts
  G_scheduler_periods: 1000
  G_scheduler_eta_min: 1e-7

  G_regularizer_orthstep: null    # unused
  G_regularizer_clipstep: null    # unused

  G_param_strict: false
  E_param_strict: false

  checkpoint_test: 50          # for testing
  checkpoint_save: 500           # for saving model
  checkpoint_print: 200          # for print


